/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-08-06 10:56:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.realgood.store.model.dto.StoreInfoMenu;
import com.kh.realgood.board.model.dto.Board;
import com.kh.realgood.store.model.vo.PageInfo;
import com.kh.realgood.store.model.dto.Store;
import java.util.List;
import com.kh.realgood.member.model.dto.Member;
import com.kh.realgood.store.model.dto.Store;

public final class reviewBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/board/../common/header.jsp", Long.valueOf(1596518241681L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.realgood.store.model.dto.Store");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.kh.realgood.store.model.dto.StoreInfoMenu");
    _jspx_imports_classes.add("com.kh.realgood.store.model.vo.PageInfo");
    _jspx_imports_classes.add("com.kh.realgood.member.model.dto.Member");
    _jspx_imports_classes.add("com.kh.realgood.board.model.dto.Board");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
 
	
	String storeNum = (String)request.getParameter("storeNum");

	String store = (String)request.getAttribute("store");
	List<Member> list = (List<Member>)request.getAttribute("list");

	

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"Mark Otto, Jacob Thornton, and Bootstrap contributors\">\r\n");
      out.write("    <meta name=\"generator\" content=\"Jekyll v4.0.1\">\r\n");
      out.write("    <title>리뷰 게시판</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"canonical\" href=\"https://getbootstrap.com/docs/4.5/examples/navbar-static/\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap core CSS -->\r\n");
      out.write(" \t<link type=\"text/css\" href=\"");
      out.print(request.getContextPath());
      out.write("/resources/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <style>\r\n");
      out.write("      .bd-placeholder-img {\r\n");
      out.write("        font-size: 1.125rem;\r\n");
      out.write("        text-anchor: middle;\r\n");
      out.write("        -webkit-user-select: none;\r\n");
      out.write("        -moz-user-select: none;\r\n");
      out.write("        -ms-user-select: none;\r\n");
      out.write("        user-select: none;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      @media (min-width: 768px) {\r\n");
      out.write("        .bd-placeholder-img-lg {\r\n");
      out.write("          font-size: 3.5rem;\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      ol, ul, li{\r\n");
      out.write("        list-style: none;\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        margin-right: 24px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .ReviewWritingPage__Container{\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        height: 300px;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      .ReviewEditor__Editor__Wrap{\r\n");
      out.write("        border: solid 1px;    \r\n");
      out.write("        height: 300px;    \r\n");
      out.write("\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("       .insert-label {\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("      width: 80px;\r\n");
      out.write("      line-height: 40px\r\n");
      out.write("\t    }\r\n");
      out.write("\t    \r\n");
      out.write("\t    .boardImg{\r\n");
      out.write("\t    \tcursor : pointer;\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("      .ReviewEditor__Editor{\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        border: none;\r\n");
      out.write("        overflow: hidden; overflow-wrap: break-word; height: 150px;\r\n");
      out.write("      }\r\n");
      out.write("      textarea {\r\n");
      out.write("\t\tresize:none;\r\n");
      out.write("        border: none;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .ReviewEditor__TextLengthStateBox{\r\n");
      out.write("        float: right; \r\n");
      out.write("        display: inline;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .pickerList{\r\n");
      out.write("        margin-left: 0px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .ReviewWritingPage__Container{\r\n");
      out.write("        margin: 11px auto 62px;\r\n");
      out.write("        width: 750px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .ReviewWritingPage__Row{\r\n");
      out.write("       margin-bottom: 10px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t#star {\r\n");
      out.write("\t  display: flex;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.star {\r\n");
      out.write("\t  font-size: 2rem;\r\n");
      out.write("\t  margin: 10px 0;\r\n");
      out.write("\t  cursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.star:not(.on) {\r\n");
      out.write("\t  color: #ccc;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.star.on {\r\n");
      out.write("\t  color: orange;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("\r\n");
      out.write("  <body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Member loginMember = (Member) session.getAttribute("loginMember");
	Store loginStore = (Store)session.getAttribute("loginStore");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("<!-- sweetalert : alert창을 꾸밀 수 있게 해주는 라이브러리 https://sweetalert.js.org/ -->\r\n");
      out.write("<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("  \t/*** 이전 페이지에서 전달받은 내용을 alert 창으로 표시하기 ***/\r\n");
      out.write("  \t");
String msg = (String) (request.getSession().getAttribute("msg"));
			String status = (String) (request.getSession().getAttribute("status"));
			String text = (String) (request.getSession().getAttribute("text"));
      out.write("\r\n");
      out.write("  \t");
if (msg != null) {
      out.write("\r\n");
      out.write("  \t\tswal({\r\n");
      out.write("  \t\t\ticon : \"");
      out.print(status);
      out.write("\",\r\n");
      out.write("  \t\t\ttitle : \"");
      out.print(msg);
      out.write("\",\r\n");
      out.write("  \t\t\ttext : \"");
      out.print(text);
      out.write("\"\r\n");
      out.write("\t});\r\n");
// Session에 존재하는 특정 키값의 속성 제거
				session.removeAttribute("msg");
				session.removeAttribute("status");
				session.removeAttribute("text");
			}
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("#nav-1 {\r\n");
      out.write("\tbackground-color: rgb(230,167,177);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media ( min-width : 769px) {\r\n");
      out.write("\t.dropdown-menu .dropdown-toggle:after {\r\n");
      out.write("\t\tborder-top: .3em solid transparent;\r\n");
      out.write("\t\tborder-right: 0;\r\n");
      out.write("\t\tborder-bottom: .3em solid transparent;\r\n");
      out.write("\t\tborder-left: .3em solid;\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu .dropdown-menu {\r\n");
      out.write("\t\tmargin-left: 0;\r\n");
      out.write("\t\tmargin-right: 0;\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu li {\r\n");
      out.write("\t\tposition: relative;\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav-item .submenu {\r\n");
      out.write("\t\tdisplay: none;\r\n");
      out.write("\t\tposition: absolute;\r\n");
      out.write("\t\tleft: 100%;\r\n");
      out.write("\t\ttop: -7px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav-item .submenu-left {\r\n");
      out.write("\t\tright: 100%;\r\n");
      out.write("\t\tleft: auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu>li:hover {\r\n");
      out.write("\t\tbackground-color: #f1f1f1\r\n");
      out.write("\t}\r\n");
      out.write("\t.dropdown-menu>li:hover>.submenu {\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* .dropdown-toggle:visited>.dropdown-menu>li>.submenu {\r\n");
      out.write("      display: block;\r\n");
      out.write("    } */\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<nav class=\"navbar navbar-expand-md navbar-dark\" id=\"nav-1\">\r\n");
      out.write("\t\t<a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\"><img\r\n");
      out.write("\t\t\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/resources/images/title.png\"\r\n");
      out.write("\t\t\talt=\"이미지 없음\"></a>\r\n");
      out.write("\t\t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\tdata-target=\"#navbarsExample03\" aria-controls=\"navbarsExample03\"\r\n");
      out.write("\t\t\taria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"collapse navbar-collapse\" id=\"navbarsExample03\">\r\n");
      out.write("\t\t\t<ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("\t\t\t\t<li class=\"nav-item active\"><a class=\"nav-link\"\r\n");
      out.write("\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("\"> 메인 </a></li>\r\n");
      out.write("\t\t\t\t");

					if (loginMember == null) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/member/login.do\"> 로그인 </a></li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/signupTerms.do\"> 회원가입 </a></li>\r\n");
      out.write("\t\t\t\t");

					} else {
				
      out.write("\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link disabled\"><strong>");
      out.print(loginMember.getNickName());
      out.write("님</strong></a></li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/member/logout.do\">로그아웃</a></li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/member/selectBookmark.do\">즐겨찾기</a>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"nav-item dropdown\"><a\r\n");
      out.write("\t\t\t\t\tclass=\"nav-link dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t\t마이페이지 </a>\r\n");
      out.write("\t\t\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t\t\t<!-- <li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("\"/member/myPage.do\" >회원정보수정&raquo</a> -->\r\n");
      out.write("\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/myPage.do\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-target=\"#navbarsExample04\" aria-controls=\"navbarsExample04\">회원정보수정</a>\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"submenu dropdown-menu\" id=\"navbarsExample04\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/myPage.do\"> 내정보수정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/changePwd.do\"> 비밀번호 변경</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/myBoadrCk.do\"> 작성 게시글 확인</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/purchase.do\"> 구매내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/removeMember.do\"> 회원탈퇴</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t\t\t");
 if(loginMember.getGradeName().equals("사장회원") || loginMember.getGradeName().equals("관리자")) {
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"#\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\t\t\t\tdata-target=\"#navbarsExample05\" aria-controls=\"navbarsExample05\">점주페이지</a>\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"submenu dropdown-menu\" id=\"navbarsExample05\">\r\n");
      out.write("\t\t\t\t\t\t\t\t");
if(loginStore == null){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/store/storeInsert.do\"> 가게정보등록</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/store/storeModify.do\"> 가게정보수정</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</ul></li>\r\n");
      out.write("\t\t\t\t\t\t\t");
 } if(loginMember.getGradeName().equals("관리자")){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!-- <li><a class=\"dropdown-item\" href=\"#\"> 관리자정보수정&raquo </a> -->\r\n");
      out.write("\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"#\" data-toggle=\"collapse\"\r\n");
      out.write("\t\t\t\t\t\t\t\tdata-target=\"#navbarsExample06\" aria-controls=\"navbarsExample06\">관리자정보수정</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"submenu dropdown-menu\" id=\"navbarsExample06\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/store/adminApprove.do\"> 관리자 승인/대기</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<li><a class=\"dropdown-item\" href=\"");
      out.print(request.getContextPath());
      out.write("/member/memberManage.do\"> 회원관리 페이지</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t</ul></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</ul></li>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t\t<form class=\"form-inline my-2 my-md-0\" action=\"");
      out.print(request.getContextPath());
      out.write("/store/search.do\" method=\"post\">\r\n");
      out.write("\t\t\t\t<input class=\"form-control\" type=\"text\" id=\"address\" name=\"address\"\r\n");
      out.write("\t\t\t\t\tplaceholder=\"위치검색\"> <input type=\"button\"\r\n");
      out.write("\t\t\t\t\tclass=\"btn btn-secondary\" onclick=\"sample5_execDaumPostcode()\"\r\n");
      out.write("\t\t\t\t\tvalue=\"위치검색\"> &nbsp;\r\n");
      out.write("\t\t\t\t<button class=\"btn btn-primary\">검색</button>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\r\n");
      out.write("\t\tfunction sample5_execDaumPostcode() {\r\n");
      out.write("\t\t\tnew daum.Postcode({\r\n");
      out.write("\t\t\t\toncomplete : function(data) {\r\n");
      out.write("\t\t\t\t\tvar addr = data.address; // 최종 주소 변수\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"address\").value = addr;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).open();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("      <section class=\"ReviewWritingPage__Container\">\r\n");
      out.write("      \r\n");
      out.write("        <div class=\"ReviewWritingPage__Row\">\r\n");
      out.write("          <h5 class=\"RestaurantSubMessage__RestaurantName\"><strong>");
      out.print(store );
      out.write("</strong></h5>\r\n");
      out.write("          <div class=\"RestaurantSubMessage__SubMessageWrap\">\r\n");
      out.write("            <span class=\"RestaurantSubMessage__SubMessage\">에 대한 솔직한 리뷰를 써주세요.</span>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    \r\n");
      out.write("    <form action=\"");
      out.print(request.getContextPath());
      out.write("/board/insert.do?storeNum=");
      out.print(storeNum);
      out.write("\" method=\"post\" \r\n");
      out.write("\t\t\t\t  enctype=\"multipart/form-data\" role=\"form\" onsubmit=\"return validate();\"> \r\n");
      out.write("    \r\n");
      out.write("        <div class=\"ReviewWritingPage__ContentWrap\">\r\n");
      out.write("          <div class=\"ReviewWritingPage__FormWrap\">\r\n");
      out.write("            <div class=\"ReviewWritingPage__EditorWrap\">\r\n");
      out.write("              <div class=\"ReviewEditor\">\r\n");
      out.write("                <div class=\"ReviewEditor__Editor__Wrap\">\r\n");
      out.write("                  <div class=\"ReviewWritingPage__RestaurantRecommendPickerWrap\">\r\n");
      out.write("                    <div class=\"pickerList\">\r\n");
      out.write("                        <div class=\"star-container\" id=\"star\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"starScore\" name=\"starScore\">\r\n");
      out.write("\t\t\t            <span class=\"star\">★</span>\r\n");
      out.write("\t\t\t            <span class=\"star\">★</span>\r\n");
      out.write("\t\t\t            <span class=\"star\">★</span>\r\n");
      out.write("\t\t\t            <span class=\"star\">★</span>\r\n");
      out.write("\t\t\t            <span class=\"star\">★</span>\r\n");
      out.write("\t\t\t          \r\n");
      out.write("\t\t\t      \t\t   </div>\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <textarea name=\"content\" id=\"content\" class=\"ReviewEditor__Editor\" maxlength=\"200\"  placeholder=\" 주문하신 메뉴는 어떠셨나요? 식당의 분위기와 서비스도 궁금해요!\" ; style=\"resize: none; height: 230px\"></textarea>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p class=\"ReviewEditor__TextLengthStateBox\">\r\n");
      out.write("                  <span style=\"color:#aaa;\" id=\"counter\">(0 / 최대 200자)</span>\r\n");
      out.write("                </p>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("    \r\n");
      out.write("            \r\n");
      out.write("            <div class=\"DraggablePictureContainer\">\r\n");
      out.write("                <ul class=\"DraggablePictureContainer__PictureList muuri\" style=\"height: 98px;\">\r\n");
      out.write("                  <li class=\"DraggablePictureContainer__PictureItem DraggablePictureContainer__PictureItem--button muuri-item muuri-item-shown dz-clickable\" style=\"left: 0px; top: 0px; transform: translateX(0px) translateY(0px); display: block; touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"form-inline mb-2\">\r\n");
      out.write("\t\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea1\">\r\n");
      out.write("\t\t\t\t\t\t<img id=\"contentImg0\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea2\">\r\n");
      out.write("\t\t\t\t\t\t<img id=\"contentImg1\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea3\">\r\n");
      out.write("\t\t\t\t\t\t<img id=\"contentImg2\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"mr-2 boardImg\" id=\"contentImgArea4\">\r\n");
      out.write("\t\t\t\t\t\t<img id=\"contentImg3\" width=\"150\" height=\"150\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div id=\"fileArea\">\r\n");
      out.write("\t\t\t\t\t<!--  multiple 속성\r\n");
      out.write("\t\t\t\t\t\t- input 요소 하나에 둘 이상의 값을 입력할 수 있음을 명시 (파일 여러개 선택 가능)\r\n");
      out.write("\t\t\t\t\t -->\r\n");
      out.write("\t\t\t\t<!--onchange : input 태그의 value값이 변했을 때 loadimg(this,1 : 현재 요소, 이벤트가 발생한 요소 + 1)라는 함수를 호출해라 -->\r\n");
      out.write("\t\t\t\t\t<input type=\"file\" id=\"img1\" name=\"img1\" onchange=\"LoadImg(this,1)\"> \r\n");
      out.write("\t\t\t\t\t<input type=\"file\" id=\"img2\" name=\"img2\" onchange=\"LoadImg(this,2)\"> \r\n");
      out.write("\t\t\t\t\t<input type=\"file\" id=\"img3\" name=\"img3\" onchange=\"LoadImg(this,3)\"> \r\n");
      out.write("\t\t\t\t\t<input type=\"file\" id=\"img4\" name=\"img4\" onchange=\"LoadImg(this,4)\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("                  </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"ReviewWritingPage__PictureWrap\" style=\"margin-top: 40px\">\r\n");
      out.write("                  <div class=\"ReviewPictureCounter\" style=\"top: 93px; left: 89px; display: block;\">\r\n");
      out.write("                  </div>\r\n");
      out.write("                <div class=\"DraggablePictureContainer__GuideLayer\">\r\n");
      out.write("                  <span class=\"DraggablePictureContainer__GuideMessage\">사진을 여기에 놓으세요.</span>\r\n");
      out.write("                </div>\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"ReviewWritingPage__ButtonsWrap\">\r\n");
      out.write("          <div class=\"ReviewWritingPage__Buttons\">\r\n");
      out.write("            <button type=\"button\" class=\"ReviewWritingPage__CancelButton\"  style=\"float: right; margin-left: 35px;\" id=\"exit\"> 취소</button>\r\n");
      out.write("            <button class=\"ReviewWritingPage__SubmitButton ReviewWritingPage__SubmitButton--Deactive\" style=\"float: right;\">리뷰 등록하기</button>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("     </form>\r\n");
      out.write("        \r\n");
      out.write("      </section>\r\n");
      out.write("      \r\n");
      out.write("  </body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" <script>\r\n");
      out.write("\t\t// 오늘 날짜 출력 \r\n");
      out.write("\t\tvar today = new Date();\r\n");
      out.write("\t\tvar month = (today.getMonth()+1);\r\n");
      out.write("\r\n");
      out.write("\t\tvar str = today.getFullYear() + \"-\"\r\n");
      out.write("\t\t\t\t+ (month < 10 ? \"0\"+month : month) + \"-\"\r\n");
      out.write("\t\t\t\t+ today.getDate();\r\n");
      out.write("\t\t$(\"#today\").html(str);\r\n");
      out.write("\r\n");
      out.write("\t\t// 유효성 검사 \r\n");
      out.write("\t\tfunction validate() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tif ($(\"#content\").val().trim().length == 0) {\r\n");
      out.write("\t\t\t\talert(\"내용을 입력해 주세요.\");\r\n");
      out.write("\t\t\t\t$(\"#content\").focus();\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t // 이미지 공간을 클릭할 때 파일 첨부 창이 뜨도록 설정하는 함수\r\n");
      out.write("\t    $(function () {\r\n");
      out.write("\t       $(\"#fileArea\").hide();\r\n");
      out.write("\r\n");
      out.write("\t      $(\"#contentImgArea1\").click(function () {\r\n");
      out.write("\t        $(\"#img1\").click();\r\n");
      out.write("\t      });\r\n");
      out.write("\t      $(\"#contentImgArea2\").click(function () {\r\n");
      out.write("\t        $(\"#img2\").click();\r\n");
      out.write("\t      });\r\n");
      out.write("\t      $(\"#contentImgArea3\").click(function () {\r\n");
      out.write("\t        $(\"#img3\").click();\r\n");
      out.write("\t      });\r\n");
      out.write("\t      $(\"#contentImgArea4\").click(function () {\r\n");
      out.write("\t        $(\"#img4\").click();\r\n");
      out.write("\t      });\r\n");
      out.write("\r\n");
      out.write("\t    });\r\n");
      out.write("\t\t \r\n");
      out.write("\r\n");
      out.write("\t    // 각각의 영역에 파일을 첨부 했을 경우 미리 보기가 가능하도록 하는 함수\r\n");
      out.write("\t    function LoadImg(value, num) { // value에 현재 요소 this가 담겨있음\r\n");
      out.write("\t      if (value.files && value.files[0]) {\r\n");
      out.write("\t    \t  // value.files : 현재 요소에 파일이 업로드 되어 있는가?\r\n");
      out.write("   \t\t\t  // value.files[0] : multiple 속성 사용으로 인해 여러 파일이 업로드 되었을 때 첫 번째 파일이 존재하는가?\r\n");
      out.write("   \t\t\t\t\t  \r\n");
      out.write("\t        var reader = new FileReader();\r\n");
      out.write("\t        // 자바스크립트 FileReader\r\n");
      out.write("        \t// 웹 애플리케이션이 비동기적으로 데이터를 읽기 위하여 읽을 파일을 가리키는 File 혹은 Blob객체를 이용해 파일의 내용을 읽고 사용자의 컴퓨터에 저장하는 것을 가능하게 해주는 객체\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("        \t// FileReader.onload - 파일리더를 다 읽었을 때 어떤 동작을 할 것인가?\r\n");
      out.write("\t\t\t\t\t// load 이벤트의 핸들러. 이 이벤트는 읽기 동작이 성공적으로 완료 되었을 때마다 발생합니다.\r\n");
      out.write("\t        reader.onload = function (e) { //e : 읽어 들일 파일\r\n");
      out.write("\t        \t//console.log(e.target.result);\r\n");
      out.write("\t        \t// e.target.result : 내가 읽어 들인 파일.의 결과\r\n");
      out.write("\t        \t// -> 파일 읽기 동작을 성공한 객체에(fileTag) 올라간 결과(이미지 또는 파일) 브라우저상에서 해석 시 하나의 이미지가 됨\r\n");
      out.write("\t        \t\r\n");
      out.write("\t          switch (num) {\r\n");
      out.write("\t            case 1:\r\n");
      out.write("\t              $(\"#contentImg0\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t            case 2:\r\n");
      out.write("\t              $(\"#contentImg1\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t            case 3:\r\n");
      out.write("\t              $(\"#contentImg2\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t            case 4:\r\n");
      out.write("\t              $(\"#contentImg3\").attr(\"src\", e.target.result);\r\n");
      out.write("\t              break;\r\n");
      out.write("\t          }\r\n");
      out.write("\t        }\r\n");
      out.write("\r\n");
      out.write("\t        reader.readAsDataURL(value.files[0]);\r\n");
      out.write("\t        // FileReader.readAsDataURL()\r\n");
      out.write("\t      \t// 지정된의 내용을 읽기 시작합니다. Blob완료되면 result속성 data:에 파일 데이터를 나타내는 URL이 포함 됩니다.\r\n");
      out.write("\t      }\r\n");
      out.write("\t    }\r\n");
      out.write("\r\n");
      out.write("       </script>\r\n");
      out.write("       \t<script>\r\n");
      out.write("\t   \t$(\"#exit\").click(function() {\r\n");
      out.write("\t   \t\thistory.back();\r\n");
      out.write("\t\t});\r\n");
      out.write("   \t</script>\r\n");
      out.write("       \r\n");
      out.write("         <script>\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("\t\t(function () {\r\n");
      out.write("\t\t    var starEls = document.querySelectorAll('#star span.star');\r\n");
      out.write("\t\t    var rate = 0;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    loop(starEls, function (el, index) {\r\n");
      out.write("\t\t        el.addEventListener('click', function () {\r\n");
      out.write("\t\t            rating(index + 1);\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    function loop(list, func) {\r\n");
      out.write("\t\t        Array.prototype.forEach.call(list, func);\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    function rating(score) {\r\n");
      out.write("\t\t        loop(starEls, function (el, index) {\r\n");
      out.write("\t\t            if (index < score) {\r\n");
      out.write("\t\t                el.classList.add('on');\r\n");
      out.write("\t\t            } else {\r\n");
      out.write("\t\t                el.classList.remove('on');\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t        rate = score;\r\n");
      out.write("\t\t        $(\"#starScore\").val(rate);\r\n");
      out.write("\t\t        console.log($(\"#starScore\").val());\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t})();\r\n");
      out.write("\r\n");
      out.write("   </script>\r\n");
      out.write("       \r\n");
      out.write("       <script>\r\n");
      out.write("       $('.ReviewEditor__Editor').keyup(function (e){\r\n");
      out.write("    var content = $(this).val();\r\n");
      out.write("    $('#counter').html(\"(\"+content.length+\" / 최대 200자)\");    //글자수 실시간 카운팅\r\n");
      out.write("\r\n");
      out.write("    if (content.length > 200){\r\n");
      out.write("        alert(\"최대 200자까지 입력 가능합니다.\");\r\n");
      out.write("        $(this).val(content.substring(0, 200));\r\n");
      out.write("        $('#counter').html(\"(200 / 최대 200자)\");\r\n");
      out.write("    }\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t</script>\r\n");
      out.write("       \r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("      <script>window.jQuery || document.write('<script src=\"../assets/js/vendor/jquery.slim.min.js\"><\\/script>')</script><script src=\"../assets/dist/js/bootstrap.bundle.js\"></script></body>\r\n");
      out.write("      \r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
